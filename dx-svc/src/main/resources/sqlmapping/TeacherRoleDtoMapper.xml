<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianxian.school.dao.TeacherRoleDtoMapper" >
  <resultMap id="BaseResultMap" type="com.dianxian.school.dto.TeacherRoleDto" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="teacher_id" property="teacherId" jdbcType="BIGINT" />
    <result column="school_id" property="schoolId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="enrol_year" property="enrolYear" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="BIGINT" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="updated_by" property="updatedBy" jdbcType="BIGINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, teacher_id, enrol_year, class_id, created_by, updated_by, created_at, 
    updated_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from teacher_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from teacher_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dianxian.school.dto.TeacherRoleDto" useGeneratedKeys="true" keyProperty="id" >
    insert into teacher_role (role_id, teacher_id, school_id,
      enrol_year, class_id, created_by, created_at
      )
    values (#{roleId,jdbcType=BIGINT}, #{teacherId,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT},
      #{enrolYear,jdbcType=INTEGER}, #{classId,jdbcType=BIGINT}, #{createdBy,jdbcType=BIGINT}, now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dianxian.school.dto.TeacherRoleDto" >
    insert into teacher_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="enrolYear != null" >
        enrol_year,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="enrolYear != null" >
        #{enrolYear,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianxian.school.dto.TeacherRoleDto" >
    update teacher_role
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="enrolYear != null" >
        enrol_year = #{enrolYear,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianxian.school.dto.TeacherRoleDto" >
    update teacher_role
    set role_id = #{roleId,jdbcType=BIGINT},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      enrol_year = #{enrolYear,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=BIGINT},
      created_by = #{createdBy,jdbcType=BIGINT},
      updated_by = #{updatedBy,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="countByClassRole" resultType="_int" parameterType="com.dianxian.school.dto.TeacherRoleDto" >
        select
            count(*)
        from teacher_role
        where teacher_id = #{teacherId,jdbcType=BIGINT} and class_id = #{classId} and role_id = #{roleId}
    </select>

    <select id="getTeacherRolesInSchool" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from teacher_role
        where teacher_id = #{teacherId} and school_id = #{schoolId} and enrol_year = 0
    </select>

    <select id="getTeacherRolesInClass" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from teacher_role
        where teacher_id = #{teacherId} and class_id = #{classId}
    </select>

    <select id="getTeacherOfClassByRole" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from teacher_role
        where class_id = #{classId} and role_id = #{roleId}
    </select>


    <select id="getTeachersOfSchoolByRole" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from teacher_role
        where school_id = #{schoolId} and role_id = #{roleId}
    </select>
</mapper>