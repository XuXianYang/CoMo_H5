<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dianxian.school.dao.SosMessageDtoMapper" >
    <resultMap id="BaseResultMap" type="com.dianxian.school.dto.SosMessageDto" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="student_id" property="studentId" jdbcType="BIGINT" />
        <result column="school_id" property="schoolId" jdbcType="BIGINT" />
        <result column="class_id" property="classId" jdbcType="BIGINT" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="longitude" property="longitude" jdbcType="REAL" />
        <result column="latitude" property="latitude" jdbcType="REAL" />
        <result column="created_by" property="createdBy" jdbcType="BIGINT" />
        <result column="updated_by" property="updatedBy" jdbcType="BIGINT" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
        <result column="message_type" property="messageType" jdbcType="INTEGER" />
        <result column="biz_timestamp" property="bizTimestamp" jdbcType="BIGINT" />
        <result column="status" property="status" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, student_id, school_id, class_id, content, longitude, latitude, created_by, updated_by,
        created_at, updated_at, message_type, biz_timestamp, status
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dianxian.school.dto.SosMessageDtoExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from sos_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from sos_message
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from sos_message
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.dianxian.school.dto.SosMessageDtoExample" >
        delete from sos_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.dianxian.school.dto.SosMessageDto" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sos_message
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="studentId != null" >
                student_id,
            </if>
            <if test="schoolId != null" >
                school_id,
            </if>
            <if test="classId != null" >
                class_id,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="longitude != null" >
                longitude,
            </if>
            <if test="latitude != null" >
                latitude,
            </if>
            <if test="createdBy != null" >
                created_by,
            </if>
            <if test="updatedBy != null" >
                updated_by,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
            <if test="messageType != null" >
                message_type,
            </if>
            <if test="bizTimestamp != null" >
                biz_timestamp,
            </if>
            <if test="status != null" >
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="studentId != null" >
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="schoolId != null" >
                #{schoolId,jdbcType=BIGINT},
            </if>
            <if test="classId != null" >
                #{classId,jdbcType=BIGINT},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null" >
                #{longitude,jdbcType=REAL},
            </if>
            <if test="latitude != null" >
                #{latitude,jdbcType=REAL},
            </if>
            <if test="createdBy != null" >
                #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="updatedBy != null" >
                #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null" >
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="messageType != null" >
                #{messageType,jdbcType=INTEGER},
            </if>
            <if test="bizTimestamp != null" >
                #{bizTimestamp,jdbcType=BIGINT},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.dianxian.school.dto.SosMessageDtoExample" resultType="java.lang.Integer" >
        select count(*) from sos_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update sos_message
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.studentId != null" >
                student_id = #{record.studentId,jdbcType=BIGINT},
            </if>
            <if test="record.schoolId != null" >
                school_id = #{record.schoolId,jdbcType=BIGINT},
            </if>
            <if test="record.classId != null" >
                class_id = #{record.classId,jdbcType=BIGINT},
            </if>
            <if test="record.content != null" >
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.longitude != null" >
                longitude = #{record.longitude,jdbcType=REAL},
            </if>
            <if test="record.latitude != null" >
                latitude = #{record.latitude,jdbcType=REAL},
            </if>
            <if test="record.createdBy != null" >
                created_by = #{record.createdBy,jdbcType=BIGINT},
            </if>
            <if test="record.updatedBy != null" >
                updated_by = #{record.updatedBy,jdbcType=BIGINT},
            </if>
            <if test="record.createdAt != null" >
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null" >
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.messageType != null" >
                message_type = #{record.messageType,jdbcType=INTEGER},
            </if>
            <if test="record.bizTimestamp != null" >
                biz_timestamp = #{record.bizTimestamp,jdbcType=BIGINT},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update sos_message
        set id = #{record.id,jdbcType=BIGINT},
        student_id = #{record.studentId,jdbcType=BIGINT},
        school_id = #{record.schoolId,jdbcType=BIGINT},
        class_id = #{record.classId,jdbcType=BIGINT},
        content = #{record.content,jdbcType=VARCHAR},
        longitude = #{record.longitude,jdbcType=REAL},
        latitude = #{record.latitude,jdbcType=REAL},
        created_by = #{record.createdBy,jdbcType=BIGINT},
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
        message_type = #{record.messageType,jdbcType=INTEGER},
        biz_timestamp = #{record.bizTimestamp,jdbcType=BIGINT},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.dianxian.school.dto.SosMessageDto" >
        update sos_message
        <set >
            <if test="studentId != null" >
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="schoolId != null" >
                school_id = #{schoolId,jdbcType=BIGINT},
            </if>
            <if test="classId != null" >
                class_id = #{classId,jdbcType=BIGINT},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null" >
                longitude = #{longitude,jdbcType=REAL},
            </if>
            <if test="latitude != null" >
                latitude = #{latitude,jdbcType=REAL},
            </if>
            <if test="createdBy != null" >
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="updatedBy != null" >
                updated_by = #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null" >
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="messageType != null" >
                message_type = #{messageType,jdbcType=INTEGER},
            </if>
            <if test="bizTimestamp != null" >
                biz_timestamp = #{bizTimestamp,jdbcType=BIGINT},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dianxian.school.dto.SosMessageDto" >
        update sos_message
        set student_id = #{studentId,jdbcType=BIGINT},
        school_id = #{schoolId,jdbcType=BIGINT},
        class_id = #{classId,jdbcType=BIGINT},
        content = #{content,jdbcType=VARCHAR},
        longitude = #{longitude,jdbcType=REAL},
        latitude = #{latitude,jdbcType=REAL},
        created_by = #{createdBy,jdbcType=BIGINT},
        updated_by = #{updatedBy,jdbcType=BIGINT},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        message_type = #{messageType,jdbcType=INTEGER},
        biz_timestamp = #{bizTimestamp,jdbcType=BIGINT},
        status = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <!-- Customized SQLs -->
    <insert id="insert" parameterType="com.dianxian.school.dto.SosMessageDto" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sos_message (student_id, school_id, class_id,
        content, longitude, latitude,
        created_by, updated_by, created_at,
        updated_at,message_type,biz_timestamp,status)
        values (#{studentId,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT},
        #{content,jdbcType=VARCHAR}, #{longitude,jdbcType=REAL}, #{latitude,jdbcType=REAL},
        #{createdBy,jdbcType=BIGINT}, #{updatedBy,jdbcType=BIGINT}, now(),
        #{updatedAt,jdbcType=TIMESTAMP},#{messageType,jdbcType=INTEGER},#{bizTimestamp,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},)
    </insert>

    <select id="selectByBizTime" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from sos_message
        where biz_timestamp = #{bizTimestamp,jdbcType=BIGINT} order by created_at desc
    </select>
    <select id="getStudentMessageList" resultMap="BaseResultMap"  >
        select
        <include refid="Base_Column_List" />
        from sos_message
        where class_id = #{classId}
    </select>
    <select id="selectWithDateByExample"  parameterType="com.dianxian.school.dto.SosMessageDtoExample"  resultType="com.dianxian.school.dto.SosMessageByDayDto" >
        select
        distinct biz_timestamp bizTimestamp
        from sos_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="findSafeAndWarningMsg" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from sos_message
        where student_id = #{studentId,jdbcType=BIGINT}
        and message_type in ('2','3')
        and created_at  &gt; #{dateTime,jdbcType=TIMESTAMP}
    </select>
</mapper>